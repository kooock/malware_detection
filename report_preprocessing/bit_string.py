import bitstring
import unigram
import count
import dir
def make_bit_string(top_unigrams,list,filename):
    bit_string = bitstring.BitString()
    for top_unigram in top_unigrams:
        if list.count(top_unigram) > 0:
            bit_string += bitstring.BitString('0b1')
        else:
            bit_string += bitstring.BitString('0b0')


    f = open(filename,'w')
    bitMargin = bit_string.length % 4
    if bitMargin == 0:
        f.write(bit_string.hex())
    else:
        for i in xrange(4-bitMargin):
            bit_string = bitstring.BitString('0b0') + bit_string
        f.write(bit_string.hex)
    f.close()

def make_bit_string_list(top_unigrams,target_dir,parent_dir):
    target_files = dir.json_filenames_in_dir(target_dir)
    if parent_dir[-1] != '/':
        parent_dir += '/'
    i = 0
    for a_file in target_files:
        a_file_unigrams = unigram.extract_unigram(a_file)
        simple_file_name = dir.filename_without_path_and_ext(a_file)
        print parent_dir + simple_file_name + ".bin"
        make_bit_string(top_unigrams,a_file_unigrams, parent_dir+simple_file_name+".bin")
        i += 1


def extract_bitstringfile(target_dir,parent_dir,length):
    most_unigrams= unigram.extract_most_appeared_unigrams_dir_only_json(target_dir,length)
    make_bit_string_list(most_unigrams,target_dir,parent_dir)

def read_bitstring(path):
    f = open(path,'r')
    s = f.read()
    bit = bitstring.BitString(s)

