import bitstring
import unigram
import count

def make_bit_string(top_unigrams,list,filename):
    bit_string = bitstring.BitString()
    for top_unigram in top_unigrams:
        if list.count(top_unigram) > 0:
            bit_string += bitstring.BitString('0b1')
        else:
            bit_string += bitstring.BitString('0b0')

    f = open(filename,'w')
    f.write(bit_string.bin.format())
    f.close()

def make_bit_string_list(top_unigrams,list,file_name_index):
    i = 0
    for a_file_unigrams in list:
        make_bit_string(top_unigrams,a_file_unigrams,file_name_index + str(i) +".bin")
        i += 1


def extract_bitstringfile(target_dir,parent_dir,file_name_index,length):
    most_unigrams,all_unigrams = unigram.extract_most_appeared_unigrams_dir(target_dir,length)
    print file_name_index
    if parent_dir[-1] != '/':
        parent_dir += '/'
    actual_file_path = parent_dir + file_name_index
    print actual_file_path
    make_bit_string_list(most_unigrams,all_unigrams,actual_file_path)
