import operator
import os

def count_single_list(dict):
    script_dir_path = os.path.dirname(os.path.abspath(__file__))
    f = open(script_dir_path+"/unigrams.reduce", 'r')
    while True:
        unigram = f.readline()
        if not unigram:
            break
        if unigram[-1] == '\n':
            unigram = unigram[0:-1]

        if unigram in dict:
            count = dict[unigram]
            count += 1
            dict[unigram] = count
        else:
            dict[unigram] = 1
    f.close()
    return dict

def most_appreared_in_dict(dict,top_num):
    sorted_dict = sorted(dict.items(), key=operator.itemgetter(1))
    sorted_dict.reverse()
    top_key_list= []
    if len(sorted_dict) >= top_num:
        for i in xrange(top_num):
            top_key_list.append(sorted_dict[i][0])
    else:
        for i in xrange(len(sorted_dict)):
            top_key_list.append(sorted_dict[i][0])
    return top_key_list

def remove_overlaped_in_list(list):
    dict = {}
    output_list = []
    for unigram in list:
        if unigram in dict:
            continue
        else:
            output_list.append(unigram)
            dict[unigram]=True
    return output_list